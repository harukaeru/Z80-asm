1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 1
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


                           TITLE '<APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>'
                   ;
                   ; "APPLE MONITOR" COPYRIGHT 1975,1976,1977
                   ; BY ROGER AMIDON
                   ;
                   ; THIS MONITOR IS 8080 CODE ONLY
                   ;
                   ; MAY 2018 BY UDO MUNK:
                   ;       TYPED IN FROM MANUAL USING INTEL SYNTAX TO ASSEMBLE
                   ;       WITH INTEL MACRO 80 OR DRI 8080 ASSEMBLER
                   ;
   F000            BASE    EQU  0F000H             ;ROM STARTING ADDRESS
   F800            USER    EQU  BASE+800H
                   ;
                   ;       THIS VERSION WRITTEN FOR ELECTRONIC CONTROL TECHNOLOGY
                   ;                 ALL RIGHTS RESERVED
                   ;
   0000            IO      EQU  0                  ;I/O PORT BASE
                   ;
   0038            RST7    EQU  38H                ;RST 7 (LOCATION FOR TRAP)
                   ;
                   ;       <I/O DEVICES>
                   ;
                   ;-C.R.T. SYSTEM
                   ;
   0001            CRTI    EQU  IO+1H              ;DATA PORT (IN)
   0000            CRTS    EQU  IO+0H              ;STATUS PORT (IN)
   0001            CRTO    EQU  IO+1H              ;DATA PORT (OUT)
   0001            CRTDA   EQU  1                  ;DATA AVAILABLE MASK
   0080            CRTBE   EQU  80H                ;XMTR BUFFER EMPTY MASK
                   ;
                   ;-PRINTER
                   ;
   0003            TTI     EQU  IO+3H              ;DATA IN PORT
   0003            TTO     EQU  IO+3H              ;DATA OUT PORT
   0002            TTS     EQU  IO+2H              ;STATUS PORT (IN)
   0001            TTYDA   EQU  1                  ;DATA AVAILABLE MASK BIT
   0080            TTYBE   EQU  80H                ;XMTR BUFFER EMPTY MASK
                   ;
                   ;-DATA TRANSFER SYSTEM
                   ;
   0005            RCSD    EQU  IO+5H              ;DATA IN PORT
   0004            RCSS    EQU  IO+4H              ;STATUS PORT (IN)
   0001            RCSDA   EQU  1                  ;DATA AVAILABLE MASK
   0005            PCASO   EQU  IO+5H              ;DATA PORT (OUT)
   0080            PCSBE   EQU  80H                ;XMTR BUFFER EMPTY MASK
                   ;
                   ; PARALLEL PORT
                   ;
   0007            PPDATA  EQU  IO+7               ;PARALLEL DATA PORT
   0006            PPSTAT  EQU  IO+6               ;PARALLEL STATUS PORT
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 2
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   0001            PPDA    EQU  1                  ;DATA AVAILABLE
   0080            PPBE    EQU  80H                ;CLEAR TO TRANSMIT DATA
                   ;
                   ;       <CONSTANTS>
                   ;
   0000            FALSE   EQU  0                  ;ISN'T SO
   FFFF            TRUE    EQU  NOT FALSE          ;IT IS SO
   000D            CR      EQU  0DH                ;ASCII CARRIAGE RETURN
   000A            LF      EQU  0AH                ;ASCII LINE FEED
   0007            BELL    EQU  7                  ;DING
   00FF            RUB     EQU  0FFH               ;RUB OUT
   0000            FIL     EQU  0                  ;FILL CHARACTER AFTER CRLF
   0007            MAX     EQU  7                  ;NUMBER OF QUES IN EOF
                   ;
                   ;       <I/O CONFIGURATION MASKS>
                   ;
   00FC            CMSK    EQU  11111100B          ;CONSOLE DEVICE
   00F3            RMSK    EQU  11110011B          ;STORAGE DEVICE (IN)
   00CF            PMSK    EQU  11001111B          ;STORAGE DEVICE (OUT)
   003F            LMSK    EQU  00111111B          ;LIST DEVICE
                   ;
                   ;-CONSOLE CONFIGURATION
   0000            CCRT    EQU  0                  ;C.R.T.
   0001            CTTY    EQU  1                  ;PRINTER
   0002            BATCH   EQU  2                  ;READER FOR INPUT, LIST FOR OUTPUT
   0003            CUSE    EQU  3                  ;USER DEFINED
                   ;
                   ;-STORAGE INPUT CONFIGURATION
   0000            RPTR    EQU  0                  ;DATA TRANSFER DEVICE
   0004            RTTY    EQU  4                  ;PRINTER DEVICE
   0008            RCAS    EQU  8                  ;PARALLEL PORT
   000C            RUSER   EQU  0CH                ;USER DEFINED
                   ;
                   ;-STORAGE OUTPUT CONFIGURATION
   0000            PPTP    EQU  0                  ;DATA TRANSFER DEVICE
   0010            PTTY    EQU  10H                ;PRINTER PUNCH
   0020            PCAS    EQU  20H                ;PARALLEL PORT
   0030            PUSER   EQU  30H                ;USER DEFINED
                   ;
                   ;-LIST DEVICE CONFIGURATION
   0000            LTTY    EQU  0                  ;CONSOLE DEVICE
   0040            LCRT    EQU  40H                ;PRINTER
   0080            LINE    EQU  80H                ;DATA TRANSFER DEVICE
   00C0            LUSER   EQU  0C0H               ;USER DEFINED
                   ;
                   ;
                   ;       VECTORS FOR USER DEFINED ROUTINES
                   ;
   F800            CILOC   EQU  USER               ;CONSOLE INPUT
   F803            COLOC   EQU  CILOC+3            ;CONSOLE OUTPUT
   F806            CSLOC   EQU  COLOC+3            ;CONSOLE INPUT STATUS ROUTINE
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 3
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F809            RULOC   EQU  CSLOC+3            ;USER DEFINED STORAGE (INPUT)
   F80C            PULOC   EQU  RULOC+3            ;USER DEFINED STORAGE (OUTPUT)
   F80F            LULOC   EQU  PULOC+3            ;USER DEFINED PRINTER (LIST)
   F812            J       EQU  LULOC+3
                   ;
                   ;       PROGRAM CODE BEGINS HERE
                   ;
   F000                    ORG  BASE
                   ;
   F000   C3D8F0   APPLE:  JMP  BEGIN              ;GO AROUND VECTORS
                   ;
                   ;       <VECTORS FOR CALLING PROGRAMS>
                   ;
                   ; THESE VECTORS MAY BE USED BY USER WRITTEN
                   ; PROGRAMS TO SIMPLIFY THE HANDLING OF I/O
                   ; FROM SYSTEM TO SYSTEM.  WHATEVER THE CURRENT
                   ; ASSIGNED DEVICE, THESE VECTORS WILL PERFORM
                   ; THE REQUIRED I/O OPERATIION, AND RETURN TO
                   ; THE CALLING PROGRAM. (RET)
                   ;
                   ; THE REGISTER CONVENTION USED FOLLOWS-
                   ;
                   ; ANY INPUT OR OUTPUT DEVICE-
                   ;       CHARACTER TO BE OUTPUT IN 'C' REGISTER.
                   ;       CHARACTER WILL BE IN 'A' REGISTER UPON
                   ;       RETURNING FROM AN INPUT OR OUTPUT.
                   ; 'CSTS'-
                   ;       RETURNS TRUE (0FFH IN 'A' REG.) IF THERE IS
                   ;       SOMETHING WAITING, AND ZERO (00) IF NOT.
                   ; 'IOCHK'-
                   ;       RETURNS WITH THE CURRENT I/O CONFIGURATION
                   ;       BYTE IN 'A' REGISTER.
                   ; 'IOSET'-
                   ;       ALLOWS A PROGRAM TO DYNAMICALLY ALTER THE
                   ;       CURRENT I/O CONFIGURATION, AND REQUIRES
                   ;       THE NEW BYTE IN 'C' REGISTER.
                   ; 'MEMCK'-
                   ;       RETURNS WITH THE HIGHEST ALLOWED USER
                   ;       MEMORY LOCATION. 'B'=HIGH BYTE, 'A'=LOW.
                   ; 'TRAP'-
                   ;       THIS IS THE 'BREAKPOINT' ENTRY POINT,
                   ;       BUT MAY BE 'CALLED'. IT WILL SAVE
                   ;       THE MACHINE STATE. RETURN CAN BE MADE WITH
                   ;       A SIMPLE 'G CR ' ON THE CONSOLE.
                   ;
   F003   C30BF7           JMP  CI                 ;CONSOLE INPUT
   F006   C32FF7           JMP  RI                 ;READER INPUT
   F009   C36AF5           JMP  CO                 ;CONSOLE OUTPUT
   F00C   C3CCF6           JMP  PO                 ;PUNCH OUTPUT
   F00F   C390F5           JMP  LO                 ;LIST OUTPUT
   F012   C3D6F5           JMP  CSTS               ;CONSOLE STATUS
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 4
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F015   C3A2F1           JMP  IOCHK              ;I/O ASSIGNMENT CHECK
   F018   C39DF1           JMP  IOSET              ;I/O SET
   F01B   C39AF0           JMP  MEMCK              ;MEMORY LIMIT CHECK
                   ;
   F01E   E5       TRAP:   PUSH H                  ;ASSUME A VALID STACK
   F01F   D5               PUSH D
   F020   C5               PUSH B
   F021   F5               PUSH PSW                ;SAVE MACHINE STATE
   F022   11EAFF           LXI  D,65535-(ENDX-EXIT)
   F025   210A00   TR0:    LXI  H,10               ;GO UP 10 BYTES IN STACK
   F028   39               DAD  SP
   F029   0604             MVI  B,4
   F02B   EB               XCHG
   F02C   2B       TR1:    DCX  H
   F02D   72               MOV  M,D
   F02E   2B               DCX  H
   F02F   73               MOV  M,E
   F030   D1               POP  D
   F031   05               DCR  B
   F032   C22CF0           JNZ  TR1
   F035   C1               POP  B                  ;OLD PC
   F036   0B               DCX  B                  ;-1
   F037   F9               SPHL                    ;SET MONITOR'S STACK
   F038   211400           LXI  H,TLOC
   F03B   39               DAD  SP
   F03C   CD7AF0           CALL TR5                ;TEST IF A TRAP SET
   F03F   23               INX  H
   F040   23               INX  H
   F041   C47AF0           CNZ  TR5                ;TEST FOR 2ND TRAP
   F044   CA48F0           JZ   TR2                ; NO
   F047   03               INX  B
   F048   210F00   TR2:    LXI  H,LLOC
   F04B   39               DAD  SP
   F04C   73               MOV  M,E
   F04D   23               INX  H
   F04E   72               MOV  M,D
   F04F   23               INX  H
   F050   23               INX  H
   F051   71               MOV  M,C
   F052   23               INX  H
   F053   70               MOV  M,B
   F054   C5               PUSH B
   F055   0E40             MVI  C,'@'
   F057   CD6AF5           CALL CO
   F05A   E1               POP  H
   F05B   CD65F6           CALL LADR
   F05E   211400           LXI  H,TLOC
   F061   39               DAD  SP
   F062   110200           LXI  D,2
   F065   4E       TR3:    MOV  C,M
   F066   72               MOV  M,D
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 5
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F067   23               INX  H
   F068   46               MOV  B,M
   F069   72               MOV  M,D
   F06A   23               INX  H
   F06B   79               MOV  A,C
   F06C   B0               ORA  B
   F06D   CA72F0           JZ   TR4
   F070   7E               MOV  A,M
   F071   02               STAX B
   F072   23       TR4:    INX  H
   F073   1D               DCR  E
   F074   C265F0           JNZ  TR3
   F077   C3FCF0           JMP  START
                   ;
   F07A   7E       TR5:    MOV  A,M
   F07B   91               SUB  C
   F07C   23               INX  H
   F07D   C0               RNZ
   F07E   7E               MOV  A,M
   F07F   90               SUB  B
   F080   C9               RET
                   ;
   F081   21FFFF   MEMSIZ: LXI  H,-1               ;START AT THE BOTTOM
   F084   24       ME0:    INR  H                  ;FIRST FIND R/W MEMORY
   F085   7E               MOV  A,M
   F086   2F               CMA
   F087   77               MOV  M,A
   F088   BE               CMP  M
   F089   2F               CMA
   F08A   77               MOV  M,A
   F08B   C284F0           JNZ  ME0
   F08E   24       ME1:    INR  H                  ;NOW FIND NON-R/W
   F08F   7E               MOV  A,M
   F090   2F               CMA
   F091   77               MOV  M,A
   F092   BE               CMP  M
   F093   2F               CMA
   F094   77               MOV  M,A
   F095   CA8EF0           JZ   ME1
   F098   25               DCR  H
   F099   C9               RET
                   ;
   F09A   E5       MEMCK:  PUSH H
   F09B   CD81F0           CALL MEMSIZ
   F09E   44               MOV  B,H                ;USER'S HIGH BYTE
   F09F   E1               POP  H
   F0A0   3EC0             MVI  A,0C0H             ;USER'S LOW BYTE
   F0A2   C9               RET
                   ;
   F0A3   21C5F0   TOM:    LXI  H,MSG
   F0A6   4E       TOM1:   MOV  C,M
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 6
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F0A7   23               INX  H
   F0A8   CD6AF5           CALL CO
   F0AB   05               DCR  B
   F0AC   C2A6F0           JNZ  TOM1
   F0AF   CDD6F5           CALL CSTS
   F0B2   B7               ORA  A
   F0B3   C8               RZ
                   ;
   F0B4   CD8DF7   CCHK:   CALL KI
   F0B7   FE03             CPI  3
   F0B9   C0               RNZ
                   ;
   F0BA   31E2FF   ERROR:  LXI  SP,65535-((ENDX-EXIT)+8)
   F0BD   0E2A             MVI  C,'*'
   F0BF   CD6AF5           CALL CO
   F0C2   C3FCF0           JMP  START
                   ;
                   ;
                   ;
                   ;
                   ;       ANNOUNCEMENT OF MONITOR NAME & VERSION
                   ;
   F0C5   0D0A0000 MSG:    DB   CR,LF,FIL,FIL,FIL
   F0C9   00      
   F0CA   4150504C         DB   'APPLE V'
   F0CE   452056  
   F0D1   312E3020         DB   '1.0 ECT'
   F0D5   454354  
   0013            MSGL    EQU  $-MSG
                   ;
                   ;       LET US BEGIN
                   ;
   F0D8   21EAFF   BEGIN:  LXI  H,65535-(ENDX-EXIT)
   F0DB   F9               SPHL                    ;SET UP A STACK
   F0DC   0615             MVI  B,ENDX-EXIT
   F0DE   11C1F7           LXI  D,EXIT
   F0E1   1A       BG1:    LDAX D
   F0E2   77               MOV  M,A
   F0E3   23               INX  H
   F0E4   13               INX  D
   F0E5   05               DCR  B
   F0E6   C2E1F0           JNZ  BG1
   F0E9   CD81F0           CALL MEMSIZ             ;GET USER'S STACK
   F0EC   E5               PUSH H
   F0ED   60               MOV  H,B                ;ZERO OUT HL
   F0EE   68               MOV  L,B
   F0EF   E5               PUSH H
   F0F0   E5               PUSH H
   F0F1   E5               PUSH H
                   ;       MVI  A,CONFIG ???
   F0F2   3E00             MVI  A,0
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 7
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F0F4   32FFFF           STA  -1
   F0F7   0613             MVI  B,MSGL
   F0F9   CDA3F0           CALL TOM                ;PRINT SIGN-ON
   F0FC   11FCF0   START:  LXI  D,START
   F0FF   D5               PUSH D
   F100   CDCCF5           CALL CRLF
   F103   0E3E             MVI  C,'>'
   F105   CD6AF5           CALL CO
   F108   2129F1           LXI  H,TBL
   F10B   CD93F7   STAR0:  CALL TI
   F10E   CA0BF1           JZ   STAR0
   F111   FE20             CPI  ' '                ;CONTROL?
   F113   DA0BF1           JC   STAR0              ;IGNORE
   F116   D641             SUI  'A'
   F118   D8               RC                      ;<A
   F119   FE1A             CPI  'Z'-'A'+1
   F11B   D0               RNC                     ;>Z
   F11C   87               ADD  A                  ;A*2
   F11D   85               ADD  L                  ;+TBL
   F11E   6F               MOV  L,A
   F11F   7E               MOV  A,M
   F120   23               INX  H
   F121   66               MOV  H,M
   F122   6F               MOV  L,A
   F123   A4               ANA  H
   F124   3C               INR  A
   F125   CABAF0           JZ   ERROR              ;DON'T GO TO 0FFFFH
   F128   E9               PCHL
                   ;
                   ;
   F129   5DF1     TBL:    DW   ASSIGN             ;A - ASSIGN I/O
   F12B   A6F1             DW   BRANCH             ;B - BRANCH TO USER ROUTINE A-Z
   F12D   FFFF             DW   OFF                ;C UNDEFINED
   F12F   B4F1             DW   DISP               ;D - DISPLAY MEMORY ON CONSOLE IN HEX
   F131   D4F1             DW   EOF                ;E - END OF FILE TAG FOR HEX DUMPS
   F133   F0F1             DW   FILL               ;F - FILL MEMORY WITH CONSTANT
   F135   FEF1             DW   GOTO               ;G - GOTO <ADDRESS>, W/BKPNTS (2)
   F137   56F6             DW   HEXN               ;H - HEX MATH <SUM> <DIFFERENCE>
   F139   12F8             DW   J                  ;I *** USER DEFINED
   F13B   4CF2             DW   TEST               ;J - NON-DESTRUCTIVE MEMORY TEST
   F13D   15F8             DW   J+3                ;K *** USER DEFINED
   F13F   67F2             DW   LOAD               ;L - LOAD A BINARY FORMAT FILE
   F141   ADF2             DW   MOVE               ;M - MOVE MASS MEMORY
   F143   02F7             DW   NULL               ;N - PUNCH LEADER/TRAILER
   F145   18F8             DW   J+6                ;O *** USER DEFINED
   F147   B9F2             DW   PUTA               ;P - 'PUT' ASCII INTO MEMORY
   F149   35F5             DW   QUERY              ;Q - QI(N)=READ I/O; QO(N,V)=SEND I/O
   F14B   1FF3             DW   READ               ;R - READ A HEX FILE (W/CHECKSUM)
   F14D   F5F3             DW   SUBS               ;S - EXAMINE/SUBSTITUTE MEMORY
   F14F   20F4             DW   TYPE               ;T - DISPLAY MEMORY IN ASCII
   F151   E9F6             DW   UNLD               ;U - DUMP MEMORY IN BINARY FORMAT
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 8
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F153   4CF4             DW   VERIFY             ;V - COMPARE MEMORY TO MEMORY
   F155   72F4             DW   WRITE              ;W - DUMP MEMORY IN HEX FILE FORMAT
   F157   BAF4             DW   XAM                ;X - EXAMINE/MODIFY CPU REGISTERS
   F159   DBF2             DW   WHERE              ;Y - FIND 'N' BYTES IN MEMORY
   F15B   5FF5             DW   SIZE               ;Z - ADDR OF LAST R/W MEMORY LOCATION
                   ;
   FFFF            OFF     EQU  -1
                   ;
   F880            UTAB    EQU  USER+80H
                   ;
                   ;
   F15D   CD93F7   ASSIGN: CALL TI                 ;GET A DEVICE
   F160   21ACF7           LXI  H,LTBL-1           ;POINT TO TABLE
   F163   010400           LXI  B,4                ;TO SKIP THRU TABLE
   F166   CD86F1           CALL AS3                ;GET DEVICE COUNT
   F169   D5               PUSH D
   F16A   CD93F7   AS1:    CALL TI
   F16D   D63D             SUI  '='
   F16F   C26AF1           JNZ  AS1
   F172   4F               MOV  C,A                ;C=0
   F173   CD93F7           CALL TI                 ;GET ASSIGNMENT
   F176   CD86F1           CALL AS3
   F179   F1               POP  PSW                ;A=DEVICE
   F17A   6A               MOV  L,D                ;L=ASSIGNMENT
   F17B   2603             MVI  H,3                ;SETUP A MASK
   F17D   3D       AS2:    DCR  A                  ;ZERO=DONE
   F17E   FA95F1           JM   AS5
   F181   29               DAD  H
   F182   29               DAD  H                  ;DOUBLE SHIFT LEFT
   F183   C37DF1           JMP  AS2
   F186   110400   AS3:    LXI  D,4                ;GO THRU THIS 4 TIMES
   F189   23       AS4:    INX  H                  ;BUMP POINTER 1
   F18A   BE               CMP  M                  ;MATCH?
   F18B   C8               RZ                      ;YES
   F18C   09               DAD  B                  ;BUMP HL
   F18D   14               INR  D
   F18E   1D               DCR  E                  ;COUNT DOWN
   F18F   C289F1           JNZ  AS4
   F192   C3BAF0           JMP  ERROR              ;CAN'T FIND IT
                   ;
   F195   AF       AS5:    XRA  A                  ;COMPLIMENT H
   F196   67               MOV  H,A
   F197   CDA2F1           CALL IOCHK              ;GET CURRENT CONFIGURATION
   F19A   A4               ANA  H                  ;KILL ASSIGNMENT BITS
   F19B   B5               ORA  L                  ;MODIFY TO NEW DEVICE
   F19C   4F               MOV  C,A                ;PUT NEW IOBYT IN C
                   ;
   0040            SZA     EQU  $-ASSIGN
                   ;
   F19D   79       IOSET:  MOV  A,C
   F19E   32FFFF           STA  -1
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 9
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F1A1   C9               RET
                   ;
   F1A2   3AFFFF   IOCHK:  LDA  -1
   F1A5   C9               RET
                   ;
   F1A6   CD93F7   BRANCH: CALL TI                 ;GET A '.'
   F1A9   FE2E             CPI  '.'
   F1AB   C2BAF0           JNZ  ERROR
   F1AE   2180F8           LXI  H,UTAB             ;POINT TO USER'S TBL
   F1B1   C30BF1           JMP  STAR0              ;GOOD LUCK
                   ;
   000E            SZB     EQU  $-BRANCH
                   ;
   0000            SZC     EQU  $-$
                   ;
   F1B4   0E10     DISP:   MVI  C,16               ;SET A DEFAULT
   F1B6   CDF7F5           CALL EXPC
   F1B9   F5               PUSH PSW
   F1BA   CD62F5   DI0:    CALL LFADR
   F1BD   F1               POP  PSW
   F1BE   F5               PUSH PSW                ;GET SIZE
   F1BF   47               MOV  B,A                ;IN B
   F1C0   CD68F5   DI1:    CALL BLK
   F1C3   7E               MOV  A,M
   F1C4   CD6AF6           CALL LBYTE
   F1C7   CD4CF6           CALL HILO
   F1CA   DA4AF6           JC   PRET
   F1CD   05               DCR  B
   F1CE   C2C0F1           JNZ  DI1
   F1D1   C3BAF1           JMP  DI0
                   ;
   0020            SZD     EQU  $-DISP
                   ;
   F1D4   CD23F6   EOF:    CALL EXPR
   F1D7   CDC5F6           CALL PEOL
   F1DA   0E3A             MVI  C,':'
   F1DC   CDCCF6           CALL PO
   F1DF   AF               XRA  A
   F1E0   CDA2F6           CALL PBYTE
   F1E3   E1               POP  H
   F1E4   CD9DF6           CALL PADR
   F1E7   210000           LXI  H,0
   F1EA   CD9DF6           CALL PADR
   F1ED   C302F7           JMP  NULL
                   ;
   001C            SZE     EQU  $-EOF
                   ;
   F1F0   CDF7F5   FILL:   CALL EXPC
   F1F3   71       FI1:    MOV  M,C
   F1F4   CD4CF6           CALL HILO
   F1F7   D2F3F1           JNC  FI1
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 10
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F1FA   D1               POP  D
   F1FB   C3FCF0           JMP  START
                   ;
   000E            SZF     EQU  $-FILL
                   ;
   F1FE   CDB6F6   GOTO:   CALL PCHK
   F201   CA0FF2           JZ   GO0                ;DELIMITER ENTERED
   F204   CD26F6           CALL EXF                ; ELSE GET A 'GO' ADDR
   F207   D1               POP  D
   F208   211500           LXI  H,PLOC
   F20B   39               DAD  SP
   F20C   72               MOV  M,D                ;PLACE IN EXIT TEMPLATE
   F20D   2B               DCX  H
   F20E   73               MOV  M,E
   F20F   FE0D     GO0:    CPI  CR                 ;TEST DELIMITER
   F211   CA43F2           JZ   GO4                ;NO BREAKPOINTS, JUST GO
   F214   1602             MVI  D,2                ;2 POSSIBLE BREAKPOINTS
   F216   211600           LXI  H,TLOCX
   F219   39               DAD  SP
   F21A   E5       GO1:    PUSH H
   F21B   CD23F6           CALL EXPR               ;GET AN ADDRESS
   F21E   C1               POP  B                  ;IN BC
   F21F   E1               POP  H
   F220   F5               PUSH PSW                ;SAVE DELIMITER
   F221   78               MOV  A,B                ;CAN'T ALLOW ANY
   F222   B1               ORA  C                  ; BREAKPOINTS AT ZERO
   F223   CA30F2           JZ   GO2
   F226   71               MOV  M,C
   F227   23               INX  H
   F228   70               MOV  M,B                ;ELSE SAVE BKPT ADDRESS
   F229   23               INX  H
   F22A   0A               LDAX B                  ;AND OPCODE THERE
   F22B   77               MOV  M,A
   F22C   23               INX  H
   F22D   3EFF             MVI  A,0FFH             ;RST 7
   F22F   02               STAX B                  ;REPLACE OPCODE
   F230   F1       GO2:    POP  PSW                ;LOOK AT DELIMITER
   F231   DA38F2           JC   GO3
   F234   15               DCR  D
   F235   C21AF2           JNZ  GO1
   F238   3EC3     GO3:    MVI  A,0C3H             ;SET A 'JMP' AT RST 7
   F23A   323800           STA  RST7
   F23D   211EF0           LXI  H,TRAP
   F240   223900           SHLD RST7+1
   F243   CDCCF5   GO4:    CALL CRLF
   F246   D1               POP  D                  ;THROW AWAY RETURN
   F247   210800           LXI  H,8
   F24A   39               DAD  SP
   F24B   E9               PCHL
                   ;
   004E            SZG     EQU  $-GOTO
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 11
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


                   ;
   F24C   CDF7F5   TEST:   CALL EXPC
   F24F   7E       TE1:    MOV  A,M
   F250   47               MOV  B,A                ;SAVE CHAR IN 'B'
   F251   2F               CMA
   F252   77               MOV  M,A
   F253   AE               XRA  M
   F254   70               MOV  M,B                ;REPLACE BYTE
   F255   CA61F2           JZ   TE2
   F258   D5               PUSH D                  ;SAVE END POINTER
   F259   5F               MOV  E,A                ;SAVE ERROR MASK
   F25A   CD65F5           CALL HLSP               ;DISPLAY BAD ADDRESS
   F25D   CDB8F5           CALL BITS+1             ;DISPLAY BAD BIT(S)
   F260   D1               POP  D                  ;RESTORE DE
   F261   CD46F6   TE2:    CALL HILOX
   F264   C34FF2           JMP  TE1
                   ;
   001B            SZJ     EQU  $-TEST
                   ;
   F267   CD23F6   LOAD:   CALL EXPR
   F26A   CDCCF5           CALL CRLF
   F26D   E1               POP  H
   F26E   16FF             MVI  D,RUB
   F270   010704   LO0:    LXI  B,407H             ;B=4 MATCHES, C=BELL
   F273   CD85F7   LO1:    CALL RIFF
   F276   C270F2           JNZ  LO0
   F279   05               DCR  B
   F27A   C273F2           JNZ  LO1
   F27D   CD85F7   LO2:    CALL RIFF
   F280   CA7DF2           JZ   LO2
   F283   77               MOV  M,A
   F284   CD6AF5           CALL CO                 ;TELL CONSOLE
   F287   23       LO3:    INX  H
   F288   CD85F7           CALL RIFF
   F28B   CA92F2           JZ   LO5
   F28E   77       LO4:    MOV  M,A
   F28F   C387F2           JMP  LO3
   F292   1E01     LO5:    MVI  E,1                ;INITIALIZE
   F294   CD85F7   LO6:    CALL RIFF
   F297   C2A4F2           JNZ  LO7
   F29A   1C               INR  E
   F29B   3E07             MVI  A,MAX
   F29D   BB               CMP  E
   F29E   C294F2           JNZ  LO6
   F2A1   C362F5           JMP  LFADR
   F2A4   72       LO7:    MOV  M,D
   F2A5   23               INX  H
   F2A6   1D               DCR  E
   F2A7   C2A4F2           JNZ  LO7
   F2AA   C38EF2           JMP  LO4
                   ;
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 12
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   0046            SZL     EQU  $-LOAD
                   ;
   F2AD   CDF7F5   MOVE:   CALL EXPC
   F2B0   7E       MO:     MOV  A,M
   F2B1   02               STAX B
   F2B2   03               INX  B
   F2B3   CD46F6           CALL HILOX
   F2B6   C3B0F2           JMP  MO
                   ;
   000C            SZM     EQU  $-MOVE
                   ;
   F2B9   CD23F6   PUTA:   CALL EXPR
   F2BC   CDCCF5           CALL CRLF
   F2BF   E1               POP  H
   F2C0   CD8DF7   PU0:    CALL KI
   F2C3   FE04             CPI  4                  ;EOT?
   F2C5   CA62F5           JZ   LFADR              ;PRINT ADDRESS & QUIT
   F2C8   FE7F             CPI  7FH                ;RUB-OUT?
   F2CA   CAD6F2           JZ   PU2                ; YES
   F2CD   77               MOV  M,A                ;PUT CHARACTER INTO MEMORY
   F2CE   4F               MOV  C,A
   F2CF   23               INX  H
   F2D0   CD6AF5   PU1:    CALL CO                 ;ECHO CHARACTER
   F2D3   C3C0F2           JMP  PU0                ;& CONTINUE
   F2D6   2B       PU2:    DCX  H                  ;BACK-UP POINTER
   F2D7   4E               MOV  C,M                ;ECHO CANCELED CHARACTER
   F2D8   C3D0F2           JMP  PU1
                   ;
   0022            SZP     EQU  $-PUTA
                   ;
   F2DB   210000   WHERE:  LXI  H,0                ;GET STRING POINTER (SP)
   F2DE   4D               MOV  C,L                ;ZERO C REG
   F2DF   39               DAD  SP
   F2E0   2B               DCX  H                  ;SP-1
   F2E1   EB               XCHG                    ;SAVE IN DE
   F2E2   CD23F6   WH1:    CALL EXPR
   F2E5   E1               POP  H                  ;CONSERVE STACK USAGE
   F2E6   65               MOV  H,L                ;L=SEARCH BYTE
   F2E7   E5               PUSH H                  ;H=L
   F2E8   33               INX  SP                 ;ADJUST STACK
   F2E9   0C               INR  C                  ;COUNT SEARCH BYTES
   F2EA   D2E2F2           JNC  WH1
   F2ED   EB               XCHG
   F2EE   51               MOV  D,C
   F2EF   E5               PUSH H                  ;HL=SEARCH STRING POINTER
   F2F0   010000           LXI  B,0
   F2F3   C5               PUSH B                  ;BC=START SEARCH (0)
   F2F4   CDCCF5   WH2:    CALL CRLF
   F2F7   C1       WH3:    POP  B
   F2F8   E1               POP  H
   F2F9   5A               MOV  E,D
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 13
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F2FA   78               MOV  A,B
   F2FB   A1               ANA  C
   F2FC   3C               INR  A
   F2FD   C203F3           JNZ  WH5
   F300   23       WH4:    INX  H
   F301   F9               SPHL                    ;RESET STACK
   F302   C9               RET
   F303   0A       WH5:    LDAX B
   F304   03               INX  B
   F305   BE               CMP  M
   F306   E5               PUSH H
   F307   C5               PUSH B
   F308   C2F7F2   WH6:    JNZ  WH3
   F30B   1D               DCR  E
   F30C   CA16F3           JZ   WH7
   F30F   0A               LDAX B
   F310   03               INX  B
   F311   2B               DCX  H
   F312   BE               CMP  M
   F313   C308F3           JMP  WH6
   F316   E1       WH7:    POP  H
   F317   E5               PUSH H
   F318   2B               DCX  H
   F319   CD65F6           CALL LADR
   F31C   C3F4F2           JMP  WH2
                   ;
   0044            SZY     EQU  $-WHERE
                   ;
   F31F   CD23F6   READ:   CALL EXPR               ;GET 16 BIT VALUE
   F322   D1               POP  D                  ;DE=BIAS
   F323   210000           LXI  H,0                ;SET-UP DEFAULT BASE 1 
   F326   E5               PUSH H                  ;AND DEFAULT BASE 2 
   F327   DA37F3           JC   RD0                ;CR
   F32A   CD23F6           CALL EXPR               ;GET ACTUAL BASE 1 
   F32D   E1               POP  H                  ;HL=BASE 1 
   F32E   DA37F3           JC   RD0                ;CR
   F331   E3               XTHL                    ;GET DEFAULT BASE 2 
   F332   CD23F6           CALL EXPR               ;GET ACTUAL BASE 2 
   F335   E1               POP  H
   F336   E3               XTHL                    ;(SP)=BASE 2 
   F337   E5       RD0:    PUSH H                  ;HL=BASE 1 
   F338   D5               PUSH D                  ;DE=BIAS
   F339   CDCCF5           CALL CRLF               ;BEGIN READING FILE
   F33C   CD7FF7   RD1:    CALL RIX                ;GET READER CHARACTER
   F33F   D63A             SUI  ':'                ;GET FILE TYPE CUE
   F341   47               MOV  B,A                ;SAVE CUE CLUE
   F342   E6FE             ANI  0FEH               ;KILL BIT 0
   F344   C23CF3           JNZ  RD1                ;NOT ':' OR ';'
   F347   57               MOV  D,A                ;ZERO CHECKSUM STORAGE
   F348   CDD4F3           CALL BYTE               ;GET FILE LRNGTH
   F34B   5F               MOV  E,A                ;SAVE IN E
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 14
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F34C   CDD4F3           CALL BYTE               ;GET LOAD MSB
   F34F   F5               PUSH PSW                ;SAVE IN STACK
   F350   CDD4F3           CALL BYTE               ;GET LOAD LSB
   F353   E1               POP  H                  ;H=MSB
   F354   6F               MOV  L,A                ;HL=LOAD ADDR
   F355   CDD4F3           CALL BYTE               ;GET FILE TYPE
   F358   B7               ORA  A                  ;TEST FILE TYPE
   F359   78               MOV  A,B                ;GET CUE
   F35A   C1               POP  B                  ;BC=BIAS
   F35B   CA65F3           JZ   RD2                ;ABSOLUTE LOAD
   F35E   EB               XCHG                    ;RELOCATE LOAD ADDR.
   F35F   E3               XTHL
   F360   EB               XCHG
   F361   19               DAD  D                  ;DO IT
   F362   EB               XCHG
   F363   E3               XTHL
   F364   EB               XCHG                    ;HL=LOAD+BASE 1 
   F365   1C       RD2:    INR  E                  ;TEST LENGTH
   F366   1D               DCR  E                  ;ZERO?
   F367   CAE7F3           JZ   DONE
   F36A   09               DAD  B                  ;ADD BIAS TO LOAD
   F36B   C5               PUSH B                  ;SAVE BIAS
   F36C   47               MOV  B,A                ;SET-UP B
   F36D   3D               DCR  A                  ;TEST CUE CLUE
   F36E   CA86F3           JZ   RD6                ;Z=REL. FILE, NZ=ABS.
   F371   CDD4F3   RD3:    CALL BYTE               ;GET NEXT DATA BYTE
   F374   77               MOV  M,A                ;WRITE TO MEMORY
   F375   23               INX  H                  ;BUMP UP LOAD POINT
   F376   1D               DCR  E                  ;BUMP DOWN BYTE COUNT
   F377   C271F3           JNZ  RD3                ;CONTINUE
   F37A   CDD4F3   RD4:    CALL BYTE               ;TEST CHECKSUN
   F37D   CA3CF3           JZ   RD1                ;OK; CONTINUE W/NEXT
   F380   CD65F6   RD5:    CALL LADR               ; ELSE PRINT LOAD ADDR
   F383   C3BAF0           JMP  ERROR              ; & ABORT
   F386   CDBEF3   RD6:    CALL RD10               ;GET NEXT DATA BYTE
   F389   77               MOV  M,A                ;STORE IT
   F38A   D2B6F3           JNC  RD9                ;NORMAL BYTE
   F38D   E5               PUSH H                  ;CARRY=RELOCATE NEXT WORD
   F38E   210500           LXI  H,5                ;POINT TO BASE 1 
   F391   39               DAD  SP                 ;IN STACK
   F392   CDBEF3   RD7:    CALL RD10               ;GET HIGH BYTE
   F395   D2A5F3           JNC  RD8                ;USE BASE N 
   F398   1D               DCR  E                  ;COUNT EXTRA BYTE
   F399   E3               XTHL                    ;GET LOAD ADDR
   F39A   35               DCR  M                  ;TEST FOR BASE 1 
   F39B   77               MOV  M,A                ;NEW LOW BYTE
   F39C   E3               XTHL                    ;SAVE LOAD AGAIN
   F39D   CA92F3           JZ   RD7                ;BASE 1 
   F3A0   23               INX  H
   F3A1   23               INX  H                  ;POINT TO BASE 2 
   F3A2   C392F3           JMP  RD7                ;AND TRY AGAIN
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 15
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


                   ;
   F3A5   86       RD8:    ADD  M                  ;ADD IN MSB
   F3A6   E3               XTHL
   F3A7   23               INX  H                  ;STICK AT LOAD+1
   F3A8   77               MOV  M,A
   F3A9   2B               DCX  H                  ;GET LOAD BYTE
   F3AA   7E               MOV  A,M                ;IN A
   F3AB   E3               XTHL
   F3AC   2B               DCX  H
   F3AD   86               ADD  M                  ;RELOCATE LSB
   F3AE   E1               POP  H                  ;GET LOAD ADDR
   F3AF   77               MOV  M,A                ;STORE IT
   F3B0   23               INX  H                  ;GET MSB
   F3B1   7E               MOV  A,M                ;IN A
   F3B2   CE00             ACI  0                  ;ADJUST FOR CARRY
   F3B4   77               MOV  M,A                ;STORE IT
   F3B5   1D               DCR  E                  ;COUNT IT
   F3B6   23       RD9:    INX  H                  ;BUMP THE COUNT
   F3B7   1D               DCR  E                  ;MORE?
   F3B8   C286F3           JNZ  RD6                ; & CONTINUE
   F3BB   C37AF3           JMP  RD4                ;TEST CHECKSUM
                   ;
   F3BE   05       RD10:   DCR  B                  ;COUNT BITS/BYTES
   F3BF   C2C9F3           JNZ  RD11               ;NEXT IS DATA BYTE
   F3C2   CDD4F3           CALL BYTE               ;GET RELOC. MAP
   F3C5   1D               DCR  E                  ;BUMP DOWN BYTE COUNT
   F3C6   4F               MOV  C,A                ;MAP IN C
   F3C7   0608             MVI  B,8                ;RESET FOR NEXT 8
   F3C9   CDD4F3   RD11:   CALL BYTE               ;NEXT DATA BYTE
   F3CC   D5               PUSH D                  ;SAVE DE
   F3CD   57               MOV  D,A                ;SAVE DATA BYTE
   F3CE   79               MOV  A,C                ;TEST FOR RELOC.
   F3CF   17               RAL                     ;IN CARRY FLAG
   F3D0   4F               MOV  C,A                ;UPDATE C
   F3D1   7A               MOV  A,D                ;RESTORE DATA BYTE
   F3D2   D1               POP  D                  ;RESTORE DE
   F3D3   C9               RET                     ;CONTINUE
                   ;
   F3D4   C5       BYTE:   PUSH B                  ;SAVE BC
   F3D5   CD8AF6           CALL RIBBLE             ;GET A CONVERTED CHAR.
   F3D8   07               RLC
   F3D9   07               RLC
   F3DA   07               RLC
   F3DB   07               RLC                     ;MOVE IT TO HIGH NIBBLE
   F3DC   4F               MOV  C,A                ;SAVE IT
   F3DD   CD8AF6           CALL RIBBLE             ;GET OTHER HALF
   F3E0   B1               ORA  C                  ;MAKE WHOLE
   F3E1   4F               MOV  C,A                ;SAVE IN C
   F3E2   82               ADD  D                  ;UPDATE CHECKSUM
   F3E3   57               MOV  D,A                ;NEW CHECKSUM
   F3E4   79               MOV  A,C                ;RESTORE DATA BYTE
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 16
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F3E5   C1               POP  B                  ;RESTORE BC
   F3E6   C9               RET                     ;CONTINUE
                   ;
   F3E7   C1       DONE:   POP  B                  ;BASE 1 
   F3E8   C1               POP  B                  ;BASE 2 
   F3E9   7C               MOV  A,H                ;TEST EOF
   F3EA   B5               ORA  L                  ;FOR ZERO
   F3EB   C8               RZ
   F3EC   EB               XCHG                    ;ELSE STORE IT IN 'P'
   F3ED   211500           LXI  H,PLOC
   F3F0   39               DAD  SP
   F3F1   72               MOV  M,D                ;IN 'EXIT' TEMPLATE
   F3F2   2B               DCX  H
   F3F3   73               MOV  M,E
   F3F4   C9               RET                     ;REALLY DONE.
                   ;
   00D6            SZR     EQU  $-READ
                   ;
   F3F5   CD23F6   SUBS:   CALL EXPR
   F3F8   E1               POP  H
   F3F9   D8               RC                      ;QUIT
   F3FA   7E       SU0:    MOV  A,M
   F3FB   CD6AF6           CALL LBYTE
   F3FE   CDB1F6           CALL COPCK
   F401   D8               RC
   F402   CA12F4           JZ   SU1
                   ;       CPI  ' '                ;BACK-UP?
   F405   FE5F             CPI  5FH                ;*UM*
   F407   CA1CF4           JZ   SU3
   F40A   E5               PUSH H
   F40B   CD26F6           CALL EXF
   F40E   D1               POP  D
   F40F   E1               POP  H
   F410   73               MOV  M,E
   F411   D8               RC
   F412   23       SU1:    INX  H
   F413   7D       SU2:    MOV  A,L
   F414   E607             ANI  7
   F416   CC62F5           CZ   LFADR
   F419   C3FAF3           JMP  SU0
   F41C   2B       SU3:    DCX  H                  ;BACK-UP
   F41D   C313F4           JMP  SU2
                   ;
   002B            SZS     EQU  $-SUBS
                   ;
   F420   0E40     TYPE:   MVI  C,64               ;SET UP A DEFAULT
   F422   CDF7F5           CALL EXPC
   F425   F5               PUSH PSW
   F426   CD62F5   TY0:    CALL LFADR
   F429   F1               POP  PSW
   F42A   F5               PUSH PSW
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 17
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F42B   47               MOV  B,A                ;RESET LENGTH
   F42C   7E       TY1:    MOV  A,M
   F42D   E67F             ANI  7FH
   F42F   FE20             CPI  ' '                ;TEST LOWER END
   F431   D236F4           JNC  TY3
   F434   3E2E     TY2:    MVI  A,'.'              ;PRINT PERIODS INSTEAD
   F436   FE7D     TY3:    CPI  7DH                ;TEST UPPER END
   F438   D234F4           JNC  TY2
   F43B   4F               MOV  C,A                ;PUT WHATEVER INTO C
   F43C   CD6AF5           CALL CO
   F43F   CD4CF6           CALL HILO
   F442   DA4AF6           JC   PRET
   F445   05               DCR  B
   F446   C22CF4           JNZ  TY1
   F449   C326F4           JMP  TY0
                   ;
   002C            SZT     EQU  $-TYPE
                   ;
   F44C   CDF7F5   VERIFY: CALL EXPC
   F44F   0A       VE0:    LDAX B
   F450   D5               PUSH D                  ;SAVE END POINTER
   F451   5E               MOV  E,M                ;GET MEMORY DATA
   F452   BB               CMP  E                  ;TEST FOR MATCH
   F453   CA6AF4           JZ   VE1                ;MATCHES
   F456   C5               PUSH B
   F457   47               MOV  B,A
   F458   CD65F5           CALL HLSP
   F45B   7B               MOV  A,E                ;GET MISMATCH
   F45C   CD6AF6           CALL LBYTE              ;PRINT IT
   F45F   CD68F5           CALL BLK                ;SPACE OVER
   F462   78               MOV  A,B                ;GET OTHER MISMATCH
   F463   CD6AF6           CALL LBYTE              ;PRINT THAT TOO
   F466   CDCCF5           CALL CRLF               ;PREPARE FOR ANOTHER
   F469   C1               POP  B
   F46A   D1       VE1:    POP  D                  ;RESTORE END POINTER
   F46B   03               INX  B
   F46C   CD46F6           CALL HILOX
   F46F   C34FF4           JMP  VE0
                   ;
   0026            SZV     EQU  $-VERIFY
                   ;
   F472   CDF7F5   WRITE:  CALL EXPC
   F475   CD05F7           CALL WAIT
   F478   CDC5F6   WR0:    CALL PEOL
   F47B   013A00           LXI  B,':'
   F47E   CDCCF6           CALL PO
   F481   D5               PUSH D
   F482   E5               PUSH H
   F483   04       WR1:    INR  B
   F484   CD4CF6           CALL HILO
   F487   DA98F4           JC   WR2
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 18
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F48A   3E18             MVI  A,24
   F48C   90               SUB  B
   F48D   C283F4           JNZ  WR1
   F490   E1               POP  H
   F491   CD9AF4           CALL WR3
   F494   D1               POP  D
   F495   C378F4           JMP  WR0
   F498   E1       WR2:    POP  H
   F499   D1               POP  D
   F49A   78       WR3:    MOV  A,B
   F49B   CDA2F6           CALL PBYTE              ;PUNCH FILE SIZE
   F49E   CD9DF6           CALL PADR               ;AND ADDR.
   F4A1   78               MOV  A,B                ;SET-UP CHECKSUM
   F4A2   84               ADD  H
   F4A3   85               ADD  L
   F4A4   57               MOV  D,A                ;CHECKSUM IN D
   F4A5   AF               XRA  A                  ;ZERO FILE TYPE
   F4A6   CDA2F6           CALL PBYTE
   F4A9   7E       WR4:    MOV  A,M
   F4AA   82               ADD  D                  ;UPDATE CHECKSUM
   F4AB   57               MOV  D,A
   F4AC   7E               MOV  A,M
   F4AD   CDA2F6           CALL PBYTE
   F4B0   23               INX  H
   F4B1   05               DCR  B
   F4B2   C2A9F4           JNZ  WR4
   F4B5   AF               XRA  A
   F4B6   92               SUB  D
   F4B7   C3A2F6           JMP  PBYTE
                   ;
   0048            SZW     EQU  $-WRITE
                   ;
   F4BA   CDB6F6   XAM:    CALL PCHK
   F4BD   21D6F7           LXI  H,ACTBL            ;POINT TO REG. TABLE
   F4C0   060B             MVI  B,ACTSZ            ;SET UP B
   F4C2   DAF9F4           JC   XA6
   F4C5   BE       XA0:    CMP  M                  ;VALID REG. NAME?
   F4C6   CAD2F4           JZ   XA1                ; YES
   F4C9   23               INX  H                  ;ELSE TEST NEXT ONE
   F4CA   23               INX  H                  ;SKIP OFFSET
   F4CB   05               DCR  B                  ;END OF TABLE?
   F4CC   CABAF0           JZ   ERROR              ; YES
   F4CF   C3C5F4           JMP  XA0                ;ELSE KEEP LOOKING
   F4D2   CD68F5   XA1:    CALL BLK
   F4D5   CD11F5   XA2:    CALL XA8                ;GET & PRINT REG(S)
   F4D8   CDB1F6   XA3:    CALL COPCK              ;MODIFY?
   F4DB   CAF2F4           JZ   XA5                ; NO, DELIMITER ENTERED
   F4DE   E5               PUSH H                  ;SAVE TABLE POINTER
   F4DF   C5               PUSH B                  ;SAVE FLAG TEST (B)
   F4E0   CD26F6           CALL EXF                ;GET NEW VALUE
   F4E3   E1               POP  H                  ;IN HL
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 19
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F4E4   C1               POP  B                  ;B=FLAG BYTE
   F4E5   F5               PUSH PSW                ;A=DELIMITER
   F4E6   7D               MOV  A,L                ;L=LOW BYTE
   F4E7   12               STAX D                  ;STORE IT
   F4E8   78               MOV  A,B                ;GET FLAG
   F4E9   17               RAL                     ;TEST BIT 7
   F4EA   D2F0F4           JNC  XA4                ;SINGLE BYTE
   F4ED   13               INX  D                  ;ELSE
   F4EE   7C               MOV  A,H                ; SAVE
   F4EF   12               STAX D                  ;  HIGH BYTE
   F4F0   F1       XA4:    POP  PSW                ;GET DELIMITER
   F4F1   E1               POP  H                  ;RESTORE TABLE POINTER
   F4F2   D8       XA5:    RC                      ;CR=DONE
   F4F3   7E               MOV  A,M                ;END OF TABLE?
   F4F4   B7               ORA  A                  ;TEST BIT 7
   F4F5   F8               RM                      ;YES, DONE
   F4F6   C3D5F4           JMP  XA2                ;ELSE CONTINUE
                   ;
   F4F9   CDCCF5   XA6:    CALL CRLF               ;FULL REGISTER DISPLAY
   F4FC   CD68F5   XA7:    CALL BLK                ;SPACE OVER
   F4FF   7E               MOV  A,M                ;GET REGISTER NAME
   F500   B7               ORA  A                  ;END OF TABLE?
   F501   F8               RM                      ;YES, RETURN
   F502   4F               MOV  C,A                ;ELSE PRINT IDENTIFIER
   F503   CD6AF5           CALL CO                 ; ON CONSOLE
   F506   0E3D             MVI  C,'='              ;FOR READABILITY
   F508   CD6AF5           CALL CO
   F50B   CD11F5           CALL XA8                ;GET & PRINT REG(S)
   F50E   C3FCF4           JMP  XA7
   F511   23       XA8:    INX  H                  ;POINT TO DISPLACEMENT
   F512   7E               MOV  A,M                ;GET IT
   F513   23               INX  H                  ;POINT TO NEXT IN TABLE
   F514   EB               XCHG                    ;SAVE IN DE
   F515   47               MOV  B,A                ;SAVE FOR FLAGS
   F516   E63F             ANI  3FH                ;KILL FLAGS
   F518   6F               MOV  L,A                ;CALCULATE DISPLACEMENT
   F519   2600             MVI  H,0
   F51B   39               DAD  SP                 ;UP IN STACK
   F51C   23               INX  H                  ;ADJUST FOR RET IN STACK
   F51D   23               INX  H
   F51E   78               MOV  A,B                ;TEST FOR 'M'
   F51F   E640             ANI  40H                ;BIT 6
   F521   CA28F5           JZ   XA9                ;NO, NOT 'M'
   F524   7E               MOV  A,M                ;ELSE GET 'M' POINTER
   F525   2B               DCX  H                  ; INSTEAD
   F526   6E               MOV  L,M                ;  IN HL
   F527   67               MOV  H,A                ;   (WHERE ELSE)
   F528   7E       XA9:    MOV  A,M                ;GET THE VALUE
   F529   CD6AF6           CALL LBYTE              ;AND PRINT IT
   F52C   EB               XCHG                    ;SWITCH POINTERS
   F52D   78               MOV  A,B                ;TEST FLAG
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 20
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F52E   17               RAL                     ;SINGLE OR DOUBLE?
   F52F   D0               RNC                     ;SINGLE
   F530   1B               DCX  D                  ;DOUBLE
   F531   1A               LDAX D                  ;GET IT
   F532   C36AF6           JMP  LBYTE              ;PRINT IT & RETURN
                   ;
   007B            SZX     EQU  $-XAM
                   ;
   F535   CD93F7   QUERY:  CALL TI                 ;SEE IF IN OR OUT
   F538   211D00           LXI  H,QLOC             ;PRESET
   F53B   39               DAD  SP                 ;TO ROUTINE IN EXIT AREA
   F53C   E5               PUSH H                  ;FOR BOTH ROUTINES
   F53D   FE4F             CPI  'O'                ;OUT?
   F53F   C24DF5           JNZ  QI                 ; NO, MUST BE IN
   F542   CDF7F5           CALL EXPC               ;GET PORT & VALUE
   F545   7B               MOV  A,E                ;L=PORT E=VALUE
   F546   4D               MOV  C,L
   F547   E1               POP  H
   F548   71               MOV  M,C
   F549   2B               DCX  H
   F54A   36D3             MVI  M,0D3H             ;SET FOR OUTPUT
   F54C   E9               PCHL                    ;DO IT & RETURN
                   ;
   F54D   FE49     QI:     CPI  'I'
   F54F   C2BAF0           JNZ  ERROR
   F552   CD23F6           CALL EXPR
   F555   C1               POP  B
   F556   21B7F5           LXI  H,BITS             ;SET-UP A RETURN
   F559   E3               XTHL
   F55A   71               MOV  M,C                ;SET PORT NUMBER
   F55B   2B               DCX  H
   F55C   36DB             MVI  M,0DBH             ;SET FOR INPUT
   F55E   E9               PCHL                    ;DO IT
                   ;
   002A            SZQ     EQU  $-QUERY
                   ;
   F55F   CD81F0   SIZE:   CALL MEMSIZ
                   ;
   F562   CDCCF5   LFADR:  CALL CRLF
                   ;
   F565   CD65F6   HLSP:   CALL LADR
                   ;
   F568   0E20     BLK:    MVI  C,' '
                   ;
   F56A   3AFFFF   CO:     LDA  -1
   F56D   E603             ANI  NOT CMSK
   F56F   CA81F5           JZ   CRTOUT
   F572   3D               DCR  A
   F573   C28CF5           JNZ  COU
                   ;
   F576   DB02     TTYOUT: IN   TTS
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 21
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F578   E680             ANI  TTYBE
   F57A   C276F5           JNZ  TTYOUT
   F57D   79               MOV  A,C
   F57E   D303             OUT  TTO
   F580   C9               RET
                   ;
   F581   DB00     CRTOUT: IN   CRTS
   F583   E680             ANI  CRTBE
   F585   C281F5           JNZ  CRTOUT
   F588   79               MOV  A,C
   F589   D301             OUT  CRTO
   F58B   C9               RET
                   ;
   F58C   3D       COU:    DCR  A                  ;BATCH
   F58D   C203F8           JNZ  COLOC              ;NO
                   ;
   F590   3AFFFF   LO:     LDA  -1
   F593   E6C0             ANI  NOT LMSK
   F595   CA81F5           JZ   CRTOUT             ;USE MAIN CONSOLE
   F598   FE40             CPI  LCRT
   F59A   CA76F5           JZ   TTYOUT             ;USE PRINTER
   F59D   FE80             CPI  LINE
   F59F   C20FF8           JNZ  LULOC              ;MUST BE USER DEFINED
                                                   ;ELSE USE DATA TRANSFER
   F5A2   DB04     LNLOC:  IN   RCSS
   F5A4   E680             ANI  PCSBE
   F5A6   C2A2F5           JNZ  LNLOC
   F5A9   79               MOV  A,C
   F5AA   D305             OUT  PCASO
   F5AC   C9               RET
                   ;
   F5AD   E60F     CONV:   ANI  0FH
   F5AF   C690             ADI  90H
   F5B1   27               DAA
   F5B2   CE40             ACI  40H
   F5B4   27               DAA
   F5B5   4F               MOV  C,A
   F5B6   C9               RET
                   ;
   F5B7   5F       BITS:   MOV  E,A
   F5B8   1608             MVI  D,8
   F5BA   CD68F5           CALL BLK
   F5BD   7B       BI:     MOV  A,E
   F5BE   17               RAL
   F5BF   5F               MOV  E,A
   F5C0   3E00             MVI  A,0
   F5C2   CE30             ACI  '0'
   F5C4   4F               MOV  C,A
   F5C5   CD6AF5           CALL CO
   F5C8   15               DCR  D
   F5C9   C2BDF5           JNZ  BI
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 22
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


                   ;
   F5CC   E5       CRLF:   PUSH H
   F5CD   C5               PUSH B                  ;SAVE BC
   F5CE   0605             MVI  B,5
   F5D0   CDA3F0           CALL TOM
   F5D3   C1               POP  B
   F5D4   E1               POP  H
   F5D5   C9               RET
                   ;
   F5D6   3AFFFF   CSTS:   LDA  -1
   F5D9   E603             ANI  NOT CMSK
   F5DB   CAEEF5           JZ   CS1                ;CRT
   F5DE   3D               DCR  A
   F5DF   CAE7F5           JZ   CS0                ;TTY
   F5E2   3D               DCR  A
   F5E3   C8               RZ                      ;BATCH MODE
   F5E4   C306F8           JMP  CSLOC              ;USER
                   ;
   F5E7   DB02     CS0:    IN   TTS
   F5E9   E601             ANI  TTYDA
   F5EB   C3F2F5           JMP  CS2
                   ;
   F5EE   DB00     CS1:    IN   CRTS
   F5F0   E601             ANI  CRTDA
   F5F2   3EFF     CS2:    MVI  A,TRUE
   F5F4   C8               RZ
   F5F5   2F               CMA
   F5F6   C9               RET
                   ;
                   ; THIS ROUTINE WILL GET TWO PARAMETERS
                   ; FROM THE KEYBOARD, AND RETURN WITH THE
                   ; 'C' REEGISTER IN A, & CARRY SET IF THE
                   ; TERMINATOR WAS A CARRIAGE RETURN. OTHERWISE,
                   ; IT WILL GET THE THIRD PARAMETER. IF THE
                   ; THIRD PARAMETER IS NON-ZERO, IT WILL RETURN
                   ; WITH THE THIRD PARAMETER IN 'A'. IF IT IS
                   ; ZERO, IT WILL RETURN WITH THE DEFAULT PARAM.
                   ; - IN EITHER CASE, IF THREE PARAMETERS WERE
                   ; ENTERED, IT WILL RETURN WITH THE CARRY CLEAR.
                   ;
   F5F7   C5       EXPC:   PUSH B                  ;SAVE DEFAULT PARAMETER
   F5F8   CD23F6           CALL EXPR               ;GET 1ST.
   F5FB   DABAF0           JC   ERROR              ;CR ENTERED TOO SOON
   F5FE   CD23F6           CALL EXPR               ;GET 2ND. PARAMETER
   F601   D1               POP  D                  ;2ND. IN DE
   F602   E1               POP  H                  ;1ST. IN HL
   F603   C1               POP  B                  ;REMOVE DEFAULT
   F604   E5               PUSH H                  ;SAVE 1ST. PARAMETER
   F605   79               MOV  A,C                ;USE DEFAULT
   F606   DA15F6           JC   EX1                ;NO THIRD PARAMETER
   F609   C5               PUSH B                  ;SAVE DEFAULT AGAIN
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 23
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F60A   CD23F6           CALL EXPR               ;GET 3RD. PARAMETER
   F60D   C1               POP  B                  ;BC=TRUE 3RD. PARAMETER
   F60E   79               MOV  A,C                ;TEST IT
   F60F   E1               POP  H                  ;HL=DEFAULT
   F610   B7               ORA  A                  ;TEST LOW BYTE
   F611   C215F6           JNZ  EX1                ;OK, TAKE IT
   F614   7D               MOV  A,L                ;ELSE USE DEFAULT
   F615   E1       EX1:    POP  H                  ;GET 1ST. PARAM
   F616   F5               PUSH PSW                ;SAVE ACC & FLAGS
   F617   CDCCF5           CALL CRLF
   F61A   F1               POP  PSW
   F61B   C9               RET
                   ;
                   ; THIS ROUTINE RETURNS ONLY IF THREE PARAMETERS
                   ; WERE ENTERED. LESS THAN THREE RESULTS IN AN
                   ; ERROR CONDITION.
                   ;
   F61C   CDF7F5   EXP3:   CALL EXPC               ;GET THREE PARAMETERS
   F61F   DABAF0           JC   ERROR              ;I SAID 3
   F622   C9               RET
                   ;
   F623   CD93F7   EXPR:   CALL TI                 ;GET KEYBOARD
   F626   210000   EXF:    LXI  H,0                ;INITIALIZE HL
   F629   47       XF1:    MOV  B,A                ;SAVE KEYBOARD
   F62A   CD8DF6           CALL NIBBLE             ;CONVERT ASCII TO HEX
   F62D   DA3CF6           JC   XF2                ;BOT LEGAL
   F630   29               DAD  H                  ;HL*16
   F631   29               DAD  H
   F632   29               DAD  H
   F633   29               DAD  H
   F634   B5               ORA  L                  ;ADD IN NIBBLE
   F635   6F               MOV  L,A
   F636   CD93F7           CALL TI                 ;GET NEXT KEYBORAD
   F639   C329F6           JMP  XF1                ;AND CONTINUE
   F63C   E3       XF2:    XTHL                    ;STICK PARAMETER IN STACK
   F63D   E5               PUSH H                  ;REPLACE RETURN
   F63E   78               MOV  A,B                ;TEST CHARACTER
   F63F   CDB9F6           CALL QCHK               ;FOR DELIMITERS
   F642   C2BAF0           JNZ  ERROR              ;ILLEGAL
   F645   C9               RET
                   ;
   F646   CD4CF6   HILOX:  CALL HILO
   F649   D0               RNC                     ;RETURN IF OK
   F64A   D1       PRET:   POP  D                  ;ELSE RETURN
   F64B   C9               RET                     ; ONE LEVEL BACK
                   ;
   F64C   23       HILO:   INX  H
   F64D   7C               MOV  A,H
   F64E   B5               ORA  L
   F64F   37               STC
   F650   C8               RZ
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 24
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F651   7B               MOV  A,E
   F652   95               SUB  L
   F653   7A               MOV  A,D
   F654   9C               SBB  H
   F655   C9               RET
                   ;
   F656   CDF7F5   HEXN:   CALL EXPC
   F659   E5               PUSH H
   F65A   19               DAD  D
   F65B   CD65F5           CALL HLSP
   F65E   E1               POP  H
   F65F   7D               MOV  A,L
   F660   93               SUB  E
   F661   6F               MOV  L,A
   F662   7C               MOV  A,H
   F663   9A               SBB  D
   F664   67               MOV  H,A
                   ;
   000F            SZH     EQU  $-HEXN
                   ;
   F665   7C       LADR:   MOV  A,H
   F666   CD6AF6           CALL LBYTE
   F669   7D               MOV  A,L
                   ;
   F66A   F5       LBYTE:  PUSH PSW
   F66B   0F               RRC
   F66C   0F               RRC
   F66D   0F               RRC
   F66E   0F               RRC
   F66F   CD73F6           CALL LB
   F672   F1               POP  PSW
   F673   CDADF5   LB:     CALL CONV
   F676   C36AF5           JMP  CO
                   ;
   F679   01FF08   MARK:   LXI  B,08FFH            ;PRESET FOR RUB-OUTS
   F67C   C382F6           JMP  LEED
                   ;
   F67F   010048   LEAD:   LXI  B,4800H            ;PRESET FOR NULLS
   F682   CDCCF6   LEED:   CALL PO
   F685   05               DCR  B
   F686   C282F6           JNZ  LEED
   F689   C9               RET
                   ;
   F68A   CD7FF7   RIBBLE: CALL RIX
   F68D   D630     NIBBLE: SUI  '0'
   F68F   D8               RC
   F690   FE17             CPI  'G'-'0'
   F692   3F               CMC
   F693   D8               RC
   F694   FE0A             CPI  10
   F696   3F               CMC
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 25
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F697   D0               RNC
   F698   D607             SUI  'A'-'9'-1
   F69A   FE0A             CPI  10
   F69C   C9               RET
                   ;
   F69D   7C       PADR:   MOV  A,H
   F69E   CDA2F6           CALL PBYTE
   F6A1   7D               MOV  A,L
                   ;
   F6A2   F5       PBYTE:  PUSH PSW
   F6A3   0F               RRC
   F6A4   0F               RRC
   F6A5   0F               RRC
   F6A6   0F               RRC
   F6A7   CDABF6           CALL PBL
   F6AA   F1               POP  PSW
   F6AB   CDADF5   PBL:    CALL CONV
   F6AE   C3CCF6           JMP  PO
                   ;
   F6B1   0E2D     COPCK:  MVI  C,'-'
   F6B3   CD6AF5           CALL CO
                   ;
   F6B6   CD93F7   PCHK:   CALL TI
                   ;
   F6B9   FE20     QCHK:   CPI  ' '
   F6BB   C8               RZ
   F6BC   FE2C             CPI  ','
   F6BE   C8               RZ
   F6BF   FE0D             CPI  CR
   F6C1   37               STC
   F6C2   C8               RZ
   F6C3   3F               CMC
   F6C4   C9               RET
                   ;
   F6C5   0E0D     PEOL:   MVI  C,CR
   F6C7   CDCCF6           CALL PO
   F6CA   0E0A             MVI  C,LF
                   ;
   F6CC   3AFFFF   PO:     LDA  -1
   F6CF   E630             ANI  NOT PMSK
   F6D1   CAA2F5           JZ   LNLOC              ;DATA XFER DEVICE
   F6D4   FE10             CPI  PTTY
   F6D6   CA76F5           JZ   TTYOUT             ;PRINTER DEVICE
   F6D9   FE20             CPI  PCAS
   F6DB   C20CF8           JNZ  PULOC              ;USER DEFINED
                   ;
   F6DE   DB06     PTPL:   IN   PPSTAT             ;PARALLEL PORT
   F6E0   E680             ANI  PPBE
   F6E2   C2DEF6           JNZ  PTPL
   F6E5   79               MOV  A,C
   F6E6   D307             OUT  PPDATA
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 26
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F6E8   C9               RET
                   ;
   F6E9   CDF7F5   UNLD:   CALL EXPC
   F6EC   CD05F7           CALL WAIT
   F6EF   CD7FF6           CALL LEAD
   F6F2   CD79F6           CALL MARK
   F6F5   4E       UL1:    MOV  C,M
   F6F6   CDCCF6           CALL PO
   F6F9   CD4CF6           CALL HILO
   F6FC   D2F5F6           JNC  UL1
   F6FF   CD79F6           CALL MARK
                   ;
   0019            SZU     EQU  $-UNLD
                   ;
   F702   CD7FF6   NULL:   CALL LEAD
                   ;
   0003            SZN     EQU  $-NULL
                   ;
   F705   3AFFFF   WAIT:   LDA  -1
   F708   E603             ANI  NOT CMSK
   F70A   C8               RZ
                   ;
   F70B   3AFFFF   CI:     LDA  -1
   F70E   E603             ANI  NOT CMSK
   F710   CA21F7           JZ   CRTIN
   F713   3D               DCR  A
   F714   C22BF7           JNZ  CIU
                   ;
   F717   DB02     TTYIN:  IN   TTS
   F719   E601             ANI  TTYDA
   F71B   C217F7           JNZ  TTYIN
   F71E   DB03             IN   TTI
   F720   C9               RET
                   ;
   F721   DB00     CRTIN:  IN   CRTS
   F723   E601             ANI  CRTDA
   F725   C221F7           JNZ  CRTIN
   F728   DB01             IN   CRTI
   F72A   C9               RET
                   ;
   F72B   3D       CIU:    DCR  A                  ;BATCH?
   F72C   C200F8           JNZ  CILOC              ; NO, MUST BE USER
                   ;
   F72F   3AFFFF   RI:     LDA  -1
   F732   E60C             ANI  NOT RMSK
   F734   D302             OUT  TTS                ;PULSE A PORT TO SHOW REQUEST
   F736   C246F7           JNZ  RI3                ;NEXT
                   ;DATA XFER
   F739   CD6AF7   RI4:    CALL RI2                ;ABORT?
   F73C   DB04             IN   RCSS
   F73E   E601             ANI  RCSDA
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 27
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F740   C239F7           JNZ  RI4
   F743   DB05             IN   RCSD
   F745   C9               RET
                   ;
   F746   FE04     RI3:    CPI  RTTY               ;IS IT PRINTER
   F748   C258F7           JNZ  RI5                ;NEXT
                   ;PRINTER
   F74B   CD6AF7   RI1:    CALL RI2                ;SEE IF ABORT
   F74E   DB02             IN   TTS
   F750   E601             ANI  TTYDA
   F752   C24BF7           JNZ  RI1
   F755   DB03             IN   TTI
   F757   C9               RET
                   ;
   F758   FE08     RI5:    CPI  RCAS
   F75A   C209F8           JNZ  RULOC              ;USER DEFINED
                   ;PARALLEL PORT
   F75D   CD6AF7   RI6:    CALL RI2
   F760   DB06             IN   PPSTAT
   F762   E601             ANI  PPDA
   F764   C25DF7           JNZ  RI6
   F767   DB07             IN   PPDATA
   F769   C9               RET
                   ;
   F76A   3AFFFF   RI2:    LDA  -1                 ;MAKE SURE CONSOLE=0
   F76D   E603             ANI  NOT CMSK
   F76F   C0               RNZ
   F770   CDD6F5           CALL CSTS               ;ANYTHING WAITING THERE?
   F773   B7               ORA  A
   F774   C8               RZ                      ;NO, CONTINUE
   F775   CD8DF7           CALL KI                 ;ELSE GET IT
   F778   FE03             CPI  3                  ;CONTROL-C?
   F77A   C0               RNZ
   F77B   F1               POP  PSW                ;ELSE RETURN
   F77C   AF               XRA  A                  ;WITH CARRY SET
   F77D   37               STC
   F77E   C9               RET
                   ;
   F77F   CD85F7   RIX:    CALL RIFF
   F782   E67F             ANI  7FH
   F784   C9               RET
                   ;
   F785   CD2FF7   RIFF:   CALL RI
   F788   DABAF0           JC   ERROR
   F78B   BA               CMP  D
   F78C   C9               RET
                   ;
   F78D   CD0BF7   KI:     CALL CI                 ;GET CONSOLE CHARACTER
   F790   E67F             ANI  7FH                ;KILL PARITY BIT
   F792   C9               RET
                   ;
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 28
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F793   CD8DF7   TI:     CALL KI
   F796   C8               RZ
   F797   FE7F             CPI  7FH
   F799   C8               RZ                      ;TEST FOR RUB-OUT
   F79A   FE0D             CPI  CR                 ;IGNORE CR'S
   F79C   C8               RZ
   F79D   C5               PUSH B
   F79E   4F               MOV  C,A
   F79F   CD6AF5           CALL CO
   F7A2   79               MOV  A,C
   F7A3   C1               POP  B
   F7A4   FE40             CPI  'A'-1              ;CONVERT TO UPPER CASE
   F7A6   D8               RC
                   ;       CPI  ' '+1
   F7A7   FE7B             CPI  7BH                ;*UM*
   F7A9   D0               RNC
   F7AA   E65F             ANI  05FH
   F7AC   C9               RET
                   ;
                   ;
                   ; <SYSTEM I/O LOOK-UP TABLE>
                   ;
                   ; THE FIRST CHARACTER IS THE DEVICE NAME
                   ; (ONE LETTER) AND THE NEXT FOUR ARE THE
                   ; NAMES OF THE FOUR POSSIBLE DRIVERS TO BE
                   ; ASSIGNED.
                   ;
   F7AD            LTBL:
                   ;
   F7AD   43               DB   'C'                ;CONSOLE ASSIGNMENTS
                   ;
   F7AE   43               DB   'C'                ;CRT
   F7AF   50               DB   'P'                ;PRINTER
   F7B0   42               DB   'B'                ;BATCH= COMMANDS FROM READER
   F7B1   55               DB   'U'                ;CUSE   USER
                   ;
                   ;
   F7B2   52               DB   'R'                ;READER ASSIGNMENTS
                   ;
   F7B3   44               DB   'D'                ;DATA TRANSFER DEVICE
   F7B4   50               DB   'P'                ;PRINTER
   F7B5   41               DB   'A'                ;ALTERNATE (PARALLEL)
   F7B6   55               DB   'U'                ;RUSER  USER
                   ;
                   ;
   F7B7   50               DB   'P'                ;PUNCH ASSIGNMENTS
                   ;
   F7B8   44               DB   'D'                ;DATA TRANSFER DEVICE
   F7B9   50               DB   'P'                ;PRINTER
   F7BA   41               DB   'A'                ;ALTERNATE (PARALLEL)
   F7BB   55               DB   'U'                ;PUSER  USER
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 29
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


                   ;
                   ;
   F7BC   4C               DB   'L'                ;LIST ASSIGNMENTS
                   ;
   F7BD   43               DB   'C'                ;CRT
   F7BE   50               DB   'P'                ;PRINTER
   F7BF   44               DB   'D'                ;DATA TRANSFER DEVICE
   F7C0   55               DB   'U'                ;LUSER  USER
                   ;
   F7C1            EXIT:
   F7C1   D1               POP  D
   F7C2   C1               POP  B
   F7C3   F1               POP  PSW
   F7C4   E1               POP  H
   F7C5   F9               SPHL
   F7C6   00               NOP                     ;COULD BE EI
   F7C7   210000           LXI  H,0
   F7C8            HLX     EQU  $-2
   F7CA   C30000           JMP  0
   F7CB            PCX     EQU  $-2
   F7CD   0000     T1A:    DW   0
   F7CF   00               DB   0
   F7D0   0000             DW   0
   F7D2   00               DB   0
   F7D3            QIO:
   F7D3   DB00             IN   0
   F7D5   C9               RET
                   ;
   F7D6            ENDX:
                   ;
   0007            ALOC    EQU  7
   0005            BLOC    EQU  5
   0004            CLOC    EQU  4
   0003            DLOC    EQU  3
   0002            ELOC    EQU  2
   0006            FLOC    EQU  6
   0012            HLOC    EQU  HLX-EXIT+11
   000F            LLOC    EQU  HLX-EXIT+8
   0015            PLOC    EQU  PCX-EXIT+11
   0009            SLOC    EQU  9
   0014            TLOC    EQU  T1A-EXIT+8
   0016            TLOCX   EQU  TLOC+2
   001D            QLOC    EQU  QIO-EXIT+11
                   ;
   F7D6            ACTBL:
   F7D6   4107             DB   'A', ALOC
   F7D8   4205             DB   'B', BLOC
   F7DA   4304             DB   'C', CLOC
   F7DC   4403             DB   'D', DLOC
   F7DE   4502             DB   'E', ELOC
   F7E0   4606             DB   'F', FLOC
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 30
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


   F7E2   4812             DB   'H', HLOC
   F7E4   4C11             DB   'L', LLOC+2
   F7E6   4D52             DB   'M', HLOC OR 040H
   F7E8   5095             DB   'P', PLOC OR 080H
   F7EA   5389             DB   'S', SLOC OR 080H
                   ;
   000B            ACTSZ   EQU  ($-ACTBL)/2
                   ;
   F7EC   FF               DB   -1                 ;TABLE DELIMITER
                   ;
   F7ED   525741           DB   'RWA'              ;AUTHOR
                   ;       DB   '(C) 1979 ECT'
                   ;
   F7F0            Z:                              ;END OF PROGRAM
                   ;
                   ;
                           END
 NO PROGRAM ERRORS
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 31
      <APPLE MONITOR, *ECT ROM* V1.0  JAN 07, 1979>


                        SYMBOL TABLE

  * 01

  A      0007      ACTBL  F7D6      ACTSZ  000B      ALOC   0007      
  APPLE  F000 *    AS1    F16A      AS2    F17D      AS3    F186      
  AS4    F189      AS5    F195      ASSIG  F15D      B      0000      
  BASE   F000      BATCH  0002 *    BEGIN  F0D8      BELL   0007 *    
  BG1    F0E1      BI     F5BD      BITS   F5B7      BLK    F568      
  BLOC   0005      BRANC  F1A6      BYTE   F3D4      C      0001      
  CCHK   F0B4 *    CCRT   0000 *    CI     F70B      CILOC  F800      
  CIU    F72B      CLOC   0004      CMSK   00FC      CO     F56A      
  COLOC  F803      CONV   F5AD      COPCK  F6B1      COU    F58C      
  CR     000D      CRLF   F5CC      CRTBE  0080      CRTDA  0001      
  CRTI   0001      CRTIN  F721      CRTO   0001      CRTOU  F581      
  CRTS   0000      CS0    F5E7      CS1    F5EE      CS2    F5F2      
  CSLOC  F806      CSTS   F5D6      CTTY   0001 *    CUSE   0003 *    
  D      0002      DI0    F1BA      DI1    F1C0      DISP   F1B4      
  DLOC   0003      DONE   F3E7      E      0003      ELOC   0002      
  ENDX   F7D6      EOF    F1D4      ERROR  F0BA      EX1    F615      
  EXF    F626      EXIT   F7C1      EXP3   F61C *    EXPC   F5F7      
  EXPR   F623      FALSE  0000      FI1    F1F3      FIL    0000      
  FILL   F1F0      FLOC   0006      GO0    F20F      GO1    F21A      
  GO2    F230      GO3    F238      GO4    F243      GOTO   F1FE      
  H      0004      HEXN   F656      HILO   F64C      HILOX  F646      
  HLOC   0012      HLSP   F565      HLX    F7C8      IO     0000      
  IOCHK  F1A2      IOSET  F19D      J      F812      KI     F78D      
  L      0005      LADR   F665      LB     F673      LBYTE  F66A      
  LCRT   0040      LEAD   F67F      LEED   F682      LF     000A      
  LFADR  F562      LINE   0080      LLOC   000F      LMSK   003F      
  LNLOC  F5A2      LO     F590      LO0    F270      LO1    F273      
  LO2    F27D      LO3    F287      LO4    F28E      LO5    F292      
  LO6    F294      LO7    F2A4      LOAD   F267      LTBL   F7AD      
  LTTY   0000 *    LULOC  F80F      LUSER  00C0 *    M      0006      
  MARK   F679      MAX    0007      ME0    F084      ME1    F08E      
  MEMCK  F09A      MEMSI  F081      MO     F2B0      MOVE   F2AD      
  MSG    F0C5      MSGL   0013      NIBBL  F68D      NULL   F702      
  OFF    FFFF      PADR   F69D      PBL    F6AB      PBYTE  F6A2      
  PCAS   0020      PCASO  0005      PCHK   F6B6      PCSBE  0080      
  PCX    F7CB      PEOL   F6C5      PLOC   0015      PMSK   00CF      
  PO     F6CC      PPBE   0080      PPDA   0001      PPDAT  0007      
  PPSTA  0006      PPTP   0000 *    PRET   F64A      PSW    0006      
  PTPL   F6DE      PTTY   0010      PU0    F2C0      PU1    F2D0      
  PU2    F2D6      PULOC  F80C      PUSER  0030 *    PUTA   F2B9      
  QCHK   F6B9      QI     F54D      QIO    F7D3      QLOC   001D      
  QUERY  F535      RCAS   0008      RCSD   0005      RCSDA  0001      
  RCSS   0004      RD0    F337      RD1    F33C      RD10   F3BE      
  RD11   F3C9      RD2    F365      RD3    F371      RD4    F37A      
  RD5    F380 *    RD6    F386      RD7    F392      RD8    F3A5      
  RD9    F3B6      READ   F31F      RI     F72F      RI1    F74B      
  RI2    F76A      RI3    F746      RI4    F739      RI5    F758      
1
 8080 MACRO ASSEMBLER, VER 3.0        ERRORS = 0      
+                                                      21:59  04/07/2018
+                                                                                      PAGE 32
                              SYMBOL TABLE


  RI6    F75D      RIBBL  F68A      RIFF   F785      RIX    F77F      
  RMSK   00F3      RPTR   0000 *    RST7   0038      RTTY   0004      
  RUB    00FF      RULOC  F809      RUSER  000C *    SIZE   F55F      
  SLOC   0009      SP     0006      STAR0  F10B      START  F0FC      
  SU0    F3FA      SU1    F412      SU2    F413      SU3    F41C      
  SUBS   F3F5      SZA    0040 *    SZB    000E *    SZC    0000 *    
  SZD    0020 *    SZE    001C *    SZF    000E *    SZG    004E *    
  SZH    000F *    SZJ    001B *    SZL    0046 *    SZM    000C *    
  SZN    0003 *    SZP    0022 *    SZQ    002A *    SZR    00D6 *    
  SZS    002B *    SZT    002C *    SZU    0019 *    SZV    0026 *    
  SZW    0048 *    SZX    007B *    SZY    0044 *    T1A    F7CD      
  TBL    F129      TE1    F24F      TE2    F261      TEST   F24C      
  TI     F793      TLOC   0014      TLOCX  0016      TOM    F0A3      
  TOM1   F0A6      TR0    F025 *    TR1    F02C      TR2    F048      
  TR3    F065      TR4    F072      TR5    F07A      TRAP   F01E      
  TRUE   FFFF      TTI    0003      TTO    0003      TTS    0002      
  TTYBE  0080      TTYDA  0001      TTYIN  F717      TTYOU  F576      
  TY0    F426      TY1    F42C      TY2    F434      TY3    F436      
  TYPE   F420      UL1    F6F5      UNLD   F6E9      USER   F800      
  UTAB   F880      VE0    F44F      VE1    F46A      VERIF  F44C      
  WAIT   F705      WH1    F2E2      WH2    F2F4      WH3    F2F7      
  WH4    F300 *    WH5    F303      WH6    F308      WH7    F316      
  WHERE  F2DB      WR0    F478      WR1    F483      WR2    F498      
  WR3    F49A      WR4    F4A9      WRITE  F472      XA0    F4C5      
  XA1    F4D2      XA2    F4D5      XA3    F4D8 *    XA4    F4F0      
  XA5    F4F2      XA6    F4F9      XA7    F4FC      XA8    F511      
  XA9    F528      XAM    F4BA      XF1    F629      XF2    F63C      
  Z      F7F0 *    

